<project name="NewPackage" default="Compile Sources" basedir="../prom6_origin/LogAbstractions">

	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="bindist" />
	<property name="doc" location="doc" />
	<property name="lib" location="lib" />
	<property name="dist" location="dist" />
	<property name="version" value="1.0" />
	<property name="project" value="LogAbstractions" />

	<!-- Set the os to win32, win64, lin32, lin64, mac, or all -->
	<property name="os" value="all" />

	<!-- Compilation macro 
	 This Macro compiles the sources is one ${src}-... folder. 
	 Two arguments are required: 
	   
	   module, which should be "Plugins", "Framework", "Models" or "Plugins".
	   
	   dependson, which should be a (semi)colon separated list of jar files to be added to the classpath. Note that by default,
	   the jars in the lib folder are added, as well as the java standard libraries and the build folder. (build folder first, then
	   java standard, then libraries and finally the dependson).
	     
	 The sources are compiled into the ${build} folder.
	 -->
	<macrodef name="compile">
		<sequential>
			<!-- Compile the java code from ${src}-@{module} into ${build} -->
			<javac srcdir="${src}" destdir="${build}" nowarn="false" verbose="no" debug="true" debuglevel="lines,vars,source" deprecation="yes" source="1.6" target="1.6">
				<classpath>
					<pathelement path="${build}" />
					<pathelement path="${java.class.path}" />
					<fileset dir=".">
						<include name="lib/**/*.jar" />
						<include name="stdlib/**/*.jar" />
						<include name="packagelib/**/*.jar" />
					</fileset>
					<fileset dir="../ProM">
						<include name="lib/**/*.jar" />
						<include name="dist/**/*.jar" />
					</fileset>
				</classpath>
				<!-- Check for unsafe operations -->
				<compilerarg value="-Xlint:unchecked" />
			</javac>
		</sequential>
	</macrodef>


	<!-- Jar macro 
	This Macro builds a jar file from compiled sources in the ${dist} folder.
	Two argument are required:
	   module, which should be "Plugins", "Framework", "Models" or "Plugins".
	   package, which should be "plugins", "framework", "models" or "plugins".
	The jar files are built with a date-postfix and copied onto (possibly existing) files without the postfix.
	-->
	<macrodef name="makejar">
		<sequential>
			<!-- Create the distribution directory -->
			<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
			<jar jarfile="${dist}/${project}-${DSTAMP}.jar">
				<fileset dir="${build}">
					<include name="**" />
					<exclude name="test**" />
				</fileset>
				<fileset dir="${src}">
					<include name="**" />
					<exclude name="test**" />
				</fileset>
				<manifest>
					<attribute name="Built-By" value="${user.name}" />
					<attribute name="Specification-Title" value="${project}-@{module}" />
					<attribute name="Specification-Version" value="${version}" />
					<attribute name="Specification-Vendor" value="www.processmining.org" />
					<attribute name="Implementation-Title" value="${project}" />
					<attribute name="Implementation-Version" value="${version} ${TODAY}" />
					<attribute name="Implementation-Vendor" value="www.processmining.org" />
					<attribute name="Sealed" value="false" />
				</manifest>
			</jar>
			<copy file="${dist}/${project}-${DSTAMP}.jar" tofile="${dist}/${project}.jar" overwrite="true" />
		</sequential>
	</macrodef>


	<!-- clean all binaries and distributions -->
	<target name="Clean build and dist folders" description="clean up" id="1">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>


	<!-- create the project's javadoc from all existing sources. Note that only org.processmining.** is included -->
	<target name="Create Javadoc" description="Generated javadoc">
		<javadoc packagenames="**" useexternalfile="true" defaultexcludes="yes" destdir="${doc}" author="true" version="true" verbose="false" use="true" windowtitle="${project}">
			<fileset dir=".">
				<include name="src/**" />
				<exclude name="src/test/**" />
				<exclude name="**/*.jj" />
				<exclude name="**/*.jjt" />
			</fileset>
		</javadoc>
	</target>

	<!-- export distribution archive -->
	<target name="Create downloadable archive (framework only)" depends="Compile Sources,Create Javadoc">
		<echo message="Building zip file packaging this project" />
		<sequential>
			<zip destfile="${dist}/${project}-${version}-${os}.zip">
				<zipfileset dir="${lib}" prefix="lib">
					<include name="**" />
				</zipfileset>
				<zipfileset dir="${dist}" prefix="">
					<include name="${project}.jar" />
				</zipfileset>
			</zip>
		</sequential>
	</target>


	<target name="Compile Sources">
		<!-- Create the build directory structure used by compile -->
		<!-- Create the time stamp -->
		<tstamp />
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
		<echo message="Compiling the sources" />
		<compile />
		<echo message="Making jar" />
		<makejar />
	</target>


</project>
